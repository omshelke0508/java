//Write a Java program to accept ‘n’ integers from the user and store them in a collection. Display them in the sorted order. The collection should not accept duplicate elements.(Use a suitable collection). Search for a particular element using predefined search
method in the Collection framework.

import java.util.*;
class Main {
	public static void main(String[] args) throws Exception {
		int no, element, i;
		Scanner sc = new Scanner(System.in);
		TreeSet<Integer> ts = new TreeSet<Integer>();
		System.out.print("Enter how many elements: ");
		no = sc.nextInt();
		for (i = 0; i < no; i++) {
			System.out.print("Enter the element: ");
			element = sc.nextInt();
			ts.add(element);
		}

		System.out.println("The elements in sorted order : " + ts);
		System.out.print("Enter element to be serach : ");
		element = sc.nextInt();
		if (ts.contains(element))
			System.out.println("Element is found");
		else
			System.out.println("Element NOT found");
	}
}

//Write a java program to simulate traffic signal using threads.

import java.util.*;

public class Main implements Runnable {
	public enum Color {
		RED, ORANGE, GREEN
	}

	private List<Color> light = Arrays.asList(Color.GREEN, Color.ORANGE, Color.RED);

	private static volatile int counter = 0;
	private int i;

	private static final Object lock = new Object();

	public Main(Color color) {
		this.i = light.indexOf(color);
	}

	@Override
	public void run() {
		try {
			synchronized (lock) {
				while (true) {
					while (counter % light.size() != i)
						lock.wait();
					System.out.println(Thread.currentThread().getName() + " :: " + light.get(counter % light.size()));
					counter++;
					Thread.sleep(1000);
					lock.notifyAll();
				}
			}
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		new Thread(new Main(Main.Color.GREEN)).start();
		new Thread(new Main(Main.Color.ORANGE)).start();
		new Thread(new Main(Main.Color.RED)).start();
	}
}